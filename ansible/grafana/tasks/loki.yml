- name: Install unzip and curl
  ansible.builtin.apt:
    name:
      - unzip
      - curl
    state: present
    update_cache: yes
  become: yes

- name: Create Loki directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /etc/loki
    - /var/lib/loki
  become: yes

- name: Download Loki binary
  ansible.builtin.get_url:
    url: "{{ loki_download_url }}"
    dest: "/tmp/loki-linux-amd64.zip"
  become: yes

- name: Unzip Loki binary
  ansible.builtin.unarchive:
    src: "/tmp/loki-linux-amd64.zip"
    dest: "/tmp"
    remote_src: yes
  become: yes

- name: Move Loki binary to install dir
  ansible.builtin.copy:
    src: "/tmp/loki-linux-amd64"
    dest: "{{ loki_install_dir }}/loki"
    mode: '0755'
  become: yes

- name: Create Loki config file
  ansible.builtin.copy:
    dest: "{{ loki_config_path }}"
    content: |
      auth_enabled: false
      server:
        http_listen_port: 3100
        grpc_listen_port: 9096
      ingester:
        lifecycler:
          address: 127.0.0.1
          ring:
            kvstore:
              store: inmemory
            replication_factor: 1
          final_sleep: 0s
        chunk_idle_period: 5m
        chunk_retain_period: 30s
      schema_config:
        configs:
          - from: 2020-10-15
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h
      storage_config:
        boltdb_shipper:
          active_index_directory: /var/lib/loki/index
          cache_location: /var/lib/loki/boltdb-cache
          shared_store: filesystem
        filesystem:
          directory: /var/lib/loki/chunks
      limits_config:
        enforce_metric_name: false
      chunk_store_config:
        max_look_back_period: 0s
      table_manager:
        retention_deletes_enabled: true
        retention_period: 168
  become: yes

- name: Create systemd unit for Loki
  ansible.builtin.copy:
    dest: /etc/systemd/system/loki.service
    content: |
      [Unit]
      Description=Loki Log Aggregation System
      After=network.target
      [Service]
      ExecStart={{ loki_install_dir }}/loki -config.file={{ loki_config_path }}
      Restart=always
      User=root
      [Install]
      WantedBy=multi-user.target
  become: yes

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes
  become: yes

- name: Enable and start Loki service
  ansible.builtin.service:
    name: loki
    state: started
    enabled: yes
  become: yes