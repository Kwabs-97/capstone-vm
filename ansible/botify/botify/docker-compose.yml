services:
  frontend:
    build: .
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./
          target: /src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    depends_on:
      - backend
    networks:
      - frontend-network
      - backend-network
    secrets:
      - GROQ_API_KEY
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_HOST
    environment:
      - GROQ_API_KEY=/run/secrets/GROQ_API_KEY
      - DATABASE_HOST_FILE=/run/secrets/POSTGRES_HOST
      - DATABASE_PORT=5432
      - DATABASE_USERNAME_FILE=/run/secrets/POSTGRES_USER
      - DATABASE_PASSWORD_FILE=/run/secrets/POSTGRES_PASSWORD
      - DATABASE_NAME_FILE=/run/secrets/POSTGRES_DB
  backend:
    image: postgres
    ports:
      - "5000:5432"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/POSTGRES_PASSWORD
      - POSTGRES_DB_FILE=/run/secrets/POSTGRES_DB
      - POSTGRES_USER_FILE=/run/secrets/POSTGRES_USER
      - POSTGRES_HOST_FILE=/run/secrets/POSTGRES_HOST 
    secrets:
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_HOST
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: on-failure
    networks:
      - backend-network
      - frontend-network

networks:
  frontend-network:
  backend-network:

volumes:
  postgres-data:

secrets:
  POSTGRES_USER:
    file: ./secrets/POSTGRES_USER.txt
  POSTGRES_PASSWORD:
    file: ./secrets/POSTGRES_PASSWORD.txt
  POSTGRES_DB:
    file: ./secrets/POSTGRES_DB.txt
  POSTGRES_HOST:
    file: ./secrets/POSTGRES_HOST.txt
  GROQ_API_KEY:
    file: ./secrets/GROQ_API_KEY.txt